<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vs2019重装问题</title>
      <link href="2021/02/25/vs/"/>
      <url>2021/02/25/vs/</url>
      
        <content type="html"><![CDATA[<h3 id="vs2019卸载重装问题"><a href="#vs2019卸载重装问题" class="headerlink" title="vs2019卸载重装问题"></a>vs2019卸载重装问题</h3><p>我的是win10系统。可能每个人遇到的情况不一样，此文仅供参考。</p><p>vs2019下载之后，就不要随意挪位置了，会出现桌面图标显示不出的问题。</p><p>之后打开vs2019时，可能会出现  “请重新安装应用程序”   字样，不要慌，找到之前安装的vs2019路径，直接删掉文件夹（一项一项来）。（有点暴力。。）</p><p>然后若是再安装vs2019时，选择安装路径，右下角会出现   “无法在非空目录上安装vs2019”    字样。</p><p>解决办法：鼠标右键单击此电脑，选择属性，打开 ”控制面板主页“ ，点击 “程序” ，再点击 “启用或关闭windows功能” ，之后会看到</p><p>“.NET Framework3.5（包括.NET 2.0和3.0）” 未被勾选，“.NET Framework 4.8 Advanced Services”  被勾选。 接下来要取消被勾选的Advanced Services。然后点击确定，卸载中。。。。。出现 “windows已完成请求的更改”  ，然后再关闭。</p><p>之后再下载.NET Framework以及vs2019就能正常使用了（具体过程请参考b站up-C3，讲的特详细)。</p><p>之前登录过账号，所以数据不会丢失。但窗口背景插件需要重新安装。</p><p>此方法亲测有效。</p><h3 id="vs2019窗口美化"><a href="#vs2019窗口美化" class="headerlink" title="vs2019窗口美化"></a>vs2019窗口美化</h3><p><img src="http://dongxixian.github.io/images/5.png" alt="窗口图片示例"></p><p>附上本人的图。</p><p>步骤：1.打开vs2019，左上角找到 ：扩展–》管理扩展–》</p><p>联机–》搜索框–》搜“Claudia IDE”–》下载 –》重启vs2019</p><p>2.调试–》选项–》Claudia IDE–》图像拉伸–》Fill。</p><p>图片路径–》选择自己图片的路径</p><p>透明度–》根据自己的图片调整，可多次调，为了不影响代码的观感，建议0.5以下（自己调啦。。。）。</p><p>over。。。。。</p>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -vs2019 -程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据的存储</title>
      <link href="2021/02/24/shujudecunchu/"/>
      <url>2021/02/24/shujudecunchu/</url>
      
        <content type="html"><![CDATA[<h3 id="数据的存储1"><a href="#数据的存储1" class="headerlink" title="数据的存储1."></a>数据的存储1.</h3><h5 id="类型的基本归类"><a href="#类型的基本归类" class="headerlink" title="类型的基本归类"></a>类型的基本归类</h5><h6 id="内置类型"><a href="#内置类型" class="headerlink" title="内置类型"></a>内置类型</h6><table><thead><tr><th>整形</th><th></th></tr></thead><tbody><tr><td>char</td><td>unsigned char ,signed char</td></tr><tr><td>short</td><td>unsigned short[int] , signed short[int]</td></tr><tr><td>int</td><td>unsigned int , signed int</td></tr><tr><td>long</td><td>unsigned long , signed long</td></tr><tr><td>浮点型</td><td></td></tr><tr><td>float</td><td></td></tr><tr><td>double</td><td></td></tr><tr><td></td><td></td></tr></tbody></table><h6 id="构造类型："><a href="#构造类型：" class="headerlink" title="构造类型："></a>构造类型：</h6><p>   数组类型，</p><p>   结构体类型【struct】，</p><p>   枚举类型【enum】，</p><p>   联合类型【union】；</p><h6 id="指针类型"><a href="#指针类型" class="headerlink" title="指针类型"></a>指针类型</h6><p>int *pi；</p><p>char *pr；</p><h6 id="空类型"><a href="#空类型" class="headerlink" title="空类型"></a>空类型</h6><p>void 通常应用于函数的返回类型，函数的参数指针类型；</p><p>void *pv；无具体类型的指针</p><h4 id="原码，反码，补码"><a href="#原码，反码，补码" class="headerlink" title="原码，反码，补码"></a>原码，反码，补码</h4><p>计算机中的有符号数的三种表示方法</p><p>三种表示方法均有符号位和数值位两个部分，符号位用0表示“正”，用1表示“负”，二数值位三种表示方法各不相同；</p><p>正数的原，反，补码相同；</p><p>对于整形来说：数据存放内存中其实存放的是补码；</p><p>原因：</p><p>再计算机系统中，数值一律用补码来表示和存储。原因在于，使用补码，可以将符号位和数值域统一处理，同时，加法和减法也可以统一处理（CPU只有加法器），此外，原码与补码相互转换，其运算过程是相同的，不需要额外的硬件电路</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="number">1</span><span class="number">-1</span>;<span class="comment">//1+（-1）</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//原码相加：</span></span><br><span class="line">    <span class="comment">//00000000000000000000000000000001</span></span><br><span class="line">    <span class="comment">//10000000000000000000000000000001</span></span><br><span class="line">    <span class="comment">//10000000000000000000000000000010</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//反码相加：</span></span><br><span class="line">    <span class="comment">//10000000000000000000000000000001</span></span><br><span class="line">    <span class="comment">//11111111111111111111111111111110</span></span><br><span class="line">    <span class="comment">//11111111111111111111111111111111</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//补码相加：</span></span><br><span class="line">    <span class="comment">//00000000000000000000000000000001</span></span><br><span class="line">    <span class="comment">//11111111111111111111111111111111</span></span><br><span class="line">    <span class="comment">//10000000000000000000000000000000</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="原码"><a href="#原码" class="headerlink" title="原码"></a>原码</h6><p>直接将二进制按照正负的形式翻译成二进制就可以；</p><h6 id="反码"><a href="#反码" class="headerlink" title="反码"></a>反码</h6><p>将原码的符号位不变，其他位次依次按位取反得到；</p><h6 id="补码"><a href="#补码" class="headerlink" title="补码"></a>补码</h6><p>反码+1；</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">20</span>;<span class="comment">//4个字节-32bit，一个字节8bit</span></span><br><span class="line">    <span class="comment">//00000000000000000000000000010100-原码</span></span><br><span class="line">    <span class="comment">//00000000000000000000000000010100-反码</span></span><br><span class="line">    <span class="comment">//0000 0000 000000000000000000010100-补码</span></span><br><span class="line">    <span class="comment">//0X00000014十六进制位</span></span><br><span class="line">    <span class="keyword">int</span> b=<span class="number">-10</span>;</span><br><span class="line">    <span class="comment">//00000000000000000000000000001010-原码</span></span><br><span class="line">    <span class="comment">//11111111111111111111111111110101-反码</span></span><br><span class="line">    <span class="comment">//1111 1111 11111111111111111111 0110-补码</span></span><br><span class="line">    <span class="comment">//8421 </span></span><br><span class="line">    <span class="comment">//0XFFFFFFF6</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>整数：</p><p>1.有符号数</p><p>正数：原码，反码，补码相同</p><p>负数：原码，反码，补码不同，要进行计算</p><p>2.无符号数</p><p>原码，反码，补码相同</p><h6 id="大端，小端"><a href="#大端，小端" class="headerlink" title="大端，小端"></a>大端，小端</h6><p>【大小端字节序存储模式】</p><p>大端（存储）模式，数据的低位保存在内存的高地址中，而数据的高位保存在内存的低地址中</p><p>小端（存储）模式，数据的低位保存在内存的低地址中，而数据的高位保存在内存的高地址中</p>]]></content>
      
      
      <categories>
          
          <category> c语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -c语言 -基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My design</title>
      <link href="2021/02/19/My%20design/"/>
      <url>2021/02/19/My%20design/</url>
      
        <content type="html"><![CDATA[<p>今日份design</p><p><img src="http://dongxixian.github.io/images/1.jpg" alt="猫眼少女"><br><img src="http://dongxixian.github.io/images/2.jpg" alt="花"><br><img src="http://dongxixian.github.io/images/3.jpg" alt="发光的少女"><br><img src="http://dongxixian.github.io/images/4.jpg" alt="进阶版"></p>]]></content>
      
      
      <categories>
          
          <category> 设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -人物 -漫画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>page</title>
      <link href="2021/02/15/page/"/>
      <url>2021/02/15/page/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/02/04/hello-world/"/>
      <url>2021/02/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
