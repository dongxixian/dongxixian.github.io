{"meta":{"title":"dxxの·wowo","subtitle":"","description":"不要亏待每一份热情，不要讨好任何冷漠。","author":"glerdox","url":"http://example.com","root":"/"},"pages":[{"title":"分类","date":"2021-02-19T12:19:41.000Z","updated":"2021-02-19T12:26:07.104Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"留言板","date":"2021-02-19T12:20:37.000Z","updated":"2021-02-19T12:28:01.952Z","comments":true,"path":"contact/index.html","permalink":"http://example.com/contact/index.html","excerpt":"","text":""},{"title":"友链","date":"2021-02-19T12:21:02.000Z","updated":"2021-02-19T12:29:02.878Z","comments":true,"path":"friends/index.html","permalink":"http://example.com/friends/index.html","excerpt":"","text":""},{"title":"关于","date":"2021-02-19T12:20:12.000Z","updated":"2021-02-19T12:26:55.361Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":""},{"title":"友链","date":"2021-06-05T07:47:18.000Z","updated":"2021-06-05T07:48:11.904Z","comments":true,"path":"link/index.html","permalink":"http://example.com/link/index.html","excerpt":"","text":""},{"title":"tags","date":"2021-02-19T12:18:58.000Z","updated":"2021-02-19T12:24:28.304Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"sss","slug":"sss","date":"2021-06-07T09:58:12.000Z","updated":"2021-06-07T10:04:50.628Z","comments":true,"path":"2021/06/07/sss/","link":"","permalink":"http://example.com/2021/06/07/sss/","excerpt":"","text":"","categories":[{"name":"分类","slug":"分类","permalink":"http://example.com/categories/%E5%88%86%E7%B1%BB/"}],"tags":[{"name":"-标签1 -标签2","slug":"标签1-标签2","permalink":"http://example.com/tags/%E6%A0%87%E7%AD%BE1-%E6%A0%87%E7%AD%BE2/"}]},{"title":"matery主题","slug":"matery","date":"2021-03-03T14:06:45.000Z","updated":"2021-06-07T10:37:48.065Z","comments":true,"path":"2021/03/03/matery/","link":"","permalink":"http://example.com/2021/03/03/matery/","excerpt":"","text":"matery主题页脚颜色关闭控制代码所在位置D:\\blog\\themes\\matery\\layout_partial\\footer.ejs 更改前： 更改后： 效果图：","categories":[{"name":"matery主题","slug":"matery主题","permalink":"http://example.com/categories/matery%E4%B8%BB%E9%A2%98/"}],"tags":[{"name":"-matery主题 -blog","slug":"matery主题-blog","permalink":"http://example.com/tags/matery%E4%B8%BB%E9%A2%98-blog/"}]},{"title":"vs2019重装问题","slug":"vs","date":"2021-02-25T01:40:11.000Z","updated":"2021-06-07T10:45:18.186Z","comments":true,"path":"2021/02/25/vs/","link":"","permalink":"http://example.com/2021/02/25/vs/","excerpt":"","text":"vs2019卸载重装问题我的是win10系统。可能每个人遇到的情况不一样，此文仅供参考。 vs2019下载之后，就不要随意挪位置了，会出现桌面图标显示不出的问题。 之后打开vs2019时，可能会出现 “请重新安装应用程序” 字样。可以在控制面版删掉vs2019。 然后若是再安装vs2019时，选择安装路径，右下角会出现 “无法在非空目录上安装vs2019” 字样。 解决办法：鼠标右键单击此电脑，选择属性，打开 ”控制面板主页“ ，点击 “程序” ，再点击 “启用或关闭windows功能” ，之后会看到 “.NET Framework3.5（包括.NET 2.0和3.0）” 未被勾选，“.NET Framework 4.8 Advanced Services” 被勾选。 接下来要取消被勾选的Advanced Services。然后点击确定，卸载中。。。。。出现 “windows已完成请求的更改” ，然后再关闭。 之后再下载.NET Framework以及vs2019就能正常使用了（具体过程请参考b站up-C3，讲的特详细)。弄完之后就算再删掉vs2019,再重新安装vs2019也不会出现 “无法再非空目录上安装vs2019” 的问题。 之前登录过账号，所以数据不会丢失。但窗口背景插件需要重新安装。 此方法亲测有效。 vs2019窗口美化 附上本人的图。 步骤：1.打开vs2019，左上角找到 ：扩展–》管理扩展–》 联机–》搜索框–》搜“Claudia IDE”–》下载 –》重启vs2019 2.调试–》选项–》Claudia IDE–》图像拉伸–》Fill。 图片路径–》选择自己图片的路径 透明度–》根据自己的图片调整，可多次调，为了不影响代码的观感，建议0.5以下。 over。。。。。","categories":[{"name":"程序","slug":"程序","permalink":"http://example.com/categories/%E7%A8%8B%E5%BA%8F/"}],"tags":[{"name":"-vs2019 -程序","slug":"vs2019-程序","permalink":"http://example.com/tags/vs2019-%E7%A8%8B%E5%BA%8F/"}]},{"title":"C语言学习笔记","slug":"Cyuyangainian","date":"2021-02-24T11:56:49.000Z","updated":"2021-06-07T10:38:40.581Z","comments":true,"path":"2021/02/24/Cyuyangainian/","link":"","permalink":"http://example.com/2021/02/24/Cyuyangainian/","excerpt":"","text":"数据的存储1.类型的基本归类内置类型 整形 char unsigned char ,signed char short unsigned short[int] , signed short[int] int unsigned int , signed int long unsigned long , signed long 浮点型 float double 构造类型： 数组类型， 结构体类型【struct】， 枚举类型【enum】， 联合类型【union】； 指针类型int *pi； char *pr； 空类型void 通常应用于函数的返回类型，函数的参数指针类型； void *pv；无具体类型的指针 原码，反码，补码计算机中的有符号数的三种表示方法 三种表示方法均有符号位和数值位两个部分，符号位用0表示“正”，用1表示“负”，二数值位三种表示方法各不相同； 正数的原，反，补码相同； 对于整形来说：数据存放内存中其实存放的是补码； 原因： 再计算机系统中，数值一律用补码来表示和存储。原因在于，使用补码，可以将符号位和数值域统一处理，同时，加法和减法也可以统一处理（CPU只有加法器），此外，原码与补码相互转换，其运算过程是相同的，不需要额外的硬件电路 int main() &#123; 1-1;//1+（-1） //原码相加： //00000000000000000000000000000001 //10000000000000000000000000000001 //10000000000000000000000000000010 //反码相加： //10000000000000000000000000000001 //11111111111111111111111111111110 //11111111111111111111111111111111 //补码相加： //00000000000000000000000000000001 //11111111111111111111111111111111 //10000000000000000000000000000000 &#125; 原码直接将二进制按照正负的形式翻译成二进制就可以； 反码将原码的符号位不变，其他位次依次按位取反得到； 补码反码+1； int main() &#123; int a=20;//4个字节-32bit，一个字节8bit //00000000000000000000000000010100-原码 //00000000000000000000000000010100-反码 //0000 0000 000000000000000000010100-补码 //0X00000014十六进制位 int b=-10; //00000000000000000000000000001010-原码 //11111111111111111111111111110101-反码 //1111 1111 11111111111111111111 0110-补码 //8421 //0XFFFFFFF6 return 0; &#125; 整数： 1.有符号数 正数：原码，反码，补码相同 负数：原码，反码，补码不同，要进行计算 2.无符号数 原码，反码，补码相同 大端，小端【大小端字节序存储模式】 大端（存储）模式，数据的低位保存在内存的高地址中，而数据的高位保存在内存的低地址中 小端（存储）模式，数据的低位保存在内存的低地址中，而数据的高位保存在内存的高地址中 c语言头文件：1.#include&lt;stdlib.h&gt;使用：stdlib.h里面定义了物种类型，一些宏和通用工具函数。在使用该类型，宏和通用工具函数时需要用stdlib.h头文件。 类型：size_t, wchar_t, div_t, ldiv_t, lldiv_t; 宏：EXIT_FAILURE, EXIT_SUCCESS, RAND_MAX, MB_CUR_MAX等等； 常用的函数：malloc(), calloc(), realloc(), free(), system(), atoi(), atol(), rand(), srand() 等等；","categories":[{"name":"c语言","slug":"c语言","permalink":"http://example.com/categories/c%E8%AF%AD%E8%A8%80/"}],"tags":[{"name":"-c语言 -基础","slug":"c语言-基础","permalink":"http://example.com/tags/c%E8%AF%AD%E8%A8%80-%E5%9F%BA%E7%A1%80/"}]},{"title":"My design","slug":"My design","date":"2021-02-19T13:14:22.000Z","updated":"2021-06-07T10:40:07.918Z","comments":true,"path":"2021/02/19/My design/","link":"","permalink":"http://example.com/2021/02/19/My%20design/","excerpt":"","text":"今日份design","categories":[{"name":"设计","slug":"设计","permalink":"http://example.com/categories/%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"-人物 -漫画","slug":"人物-漫画","permalink":"http://example.com/tags/%E4%BA%BA%E7%89%A9-%E6%BC%AB%E7%94%BB/"}]}],"categories":[{"name":"分类","slug":"分类","permalink":"http://example.com/categories/%E5%88%86%E7%B1%BB/"},{"name":"matery主题","slug":"matery主题","permalink":"http://example.com/categories/matery%E4%B8%BB%E9%A2%98/"},{"name":"程序","slug":"程序","permalink":"http://example.com/categories/%E7%A8%8B%E5%BA%8F/"},{"name":"c语言","slug":"c语言","permalink":"http://example.com/categories/c%E8%AF%AD%E8%A8%80/"},{"name":"设计","slug":"设计","permalink":"http://example.com/categories/%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"-标签1 -标签2","slug":"标签1-标签2","permalink":"http://example.com/tags/%E6%A0%87%E7%AD%BE1-%E6%A0%87%E7%AD%BE2/"},{"name":"-matery主题 -blog","slug":"matery主题-blog","permalink":"http://example.com/tags/matery%E4%B8%BB%E9%A2%98-blog/"},{"name":"-vs2019 -程序","slug":"vs2019-程序","permalink":"http://example.com/tags/vs2019-%E7%A8%8B%E5%BA%8F/"},{"name":"-c语言 -基础","slug":"c语言-基础","permalink":"http://example.com/tags/c%E8%AF%AD%E8%A8%80-%E5%9F%BA%E7%A1%80/"},{"name":"-人物 -漫画","slug":"人物-漫画","permalink":"http://example.com/tags/%E4%BA%BA%E7%89%A9-%E6%BC%AB%E7%94%BB/"}]}